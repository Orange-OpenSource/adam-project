buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.22.2'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "org.project.adam"
        minSdkVersion isDev() ? 21 : 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.2.3"

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resConfigs "en,fr", isDev() ? "xxhdpi" : ""
    }

    compileOptions {
        encoding 'UTF-8'
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        preDexLibraries isDev()
        javaMaxHeapSize "2g"
        dexInProcess true
    }


    signingConfigs {
        release {
            storeFile file("adam.jks")
            storePassword "adamproject"
            keyAlias "adamproject"
            keyPassword "adamproject"
        }
    }

    buildTypes {

        debug {
            zipAlignEnabled true
            minifyEnabled false
        }

        release {
            zipAlignEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release

            // put your exceptions here
            proguardFile 'proguard-rules.pro'

            proguardFile getDefaultProguardFile('proguard-android.txt')

            ext.betaDistributionGroupAliases = "Adam"
            ext.betaDistributionReleaseNotesFilePath = "fabric/release_notes.txt"
        }
    }

    aaptOptions {
        cruncherEnabled = !isDev()
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

}

dependencies {
    compile 'com.github.dwfox:DWRulerView:1.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile('com.squareup.assertj:assertj-android:1.1.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:' + rootProject.supportLibVersion
    compile 'com.android.support:cardview-v7:' + rootProject.supportLibVersion
    compile 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion

    testCompile 'junit:junit:4.12'
    testCompile('com.squareup.assertj:assertj-android:1.1.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "org.mockito:mockito-core:2.8.47"
    testCompile "com.googlecode.zohhak:zohhak:1.1.1"

    // Android annotations
    compile 'org.androidannotations:androidannotations-api:4.3.1'
    annotationProcessor 'org.androidannotations:androidannotations:4.3.1'

    compile 'android.arch.persistence.room:runtime:' + rootProject.archhComponentsVersion;
    annotationProcessor "android.arch.persistence.room:compiler:" + rootProject.archhComponentsVersion;

    compile 'android.arch.lifecycle:extensions:' + rootProject.archhComponentsVersion
    compile 'android.arch.lifecycle:runtime:' + rootProject.archhComponentsVersion
    annotationProcessor "android.arch.lifecycle:compiler:" + rootProject.archhComponentsVersion

    // Timber
    compile 'com.jakewharton.timber:timber:4.5.1'
    // Lombok
    provided 'org.projectlombok:lombok:1.16.16'
    annotationProcessor "org.projectlombok:lombok:1.16.16"

    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    //crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
}

private boolean isDev() {
    project.hasProperty('devBuild')
}
